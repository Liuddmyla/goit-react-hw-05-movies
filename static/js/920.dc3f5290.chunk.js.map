{"version":3,"file":"static/js/920.dc3f5290.chunk.js","mappings":"qPA4BA,EAxBiB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACVC,GAAWC,EAAAA,EAAAA,MAEnB,OACMF,EAAMG,KAAI,SAAAC,GACN,OAAO,eAAkBC,UAAWC,EAAAA,EAAAA,KAA7B,UACH,UAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAKI,IAAMC,MAAO,CAAEC,KAAMT,GAAYI,UAAWC,EAAAA,EAAAA,KAAtE,WACI,gBAAKK,IAAG,yCAAoCP,EAAI,aAAmBQ,IAAI,YACvE,uBAAIR,EAAKS,YAHDT,EAAKI,GAKxB,GAER,ECXKM,EACO,UADPA,EAEQ,WAFRA,EAGQ,WAyCd,EAtCa,WAET,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOf,EAAP,KAAckB,EAAd,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAwBF,OAtBEC,EAAAA,EAAAA,YAAU,WAGNJ,EAAUH,GAEVQ,MAJS,4FAIEC,MAAK,SAAAC,GACZ,OAAIA,EAASC,GACLD,EAASE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,UAClC,IACAN,MAAK,YAAkB,IAAfO,EAAc,EAAdA,QACNZ,EAASY,GACTb,EAAUH,EACZ,IACAiB,OAAM,SAAAZ,GACJC,EAASD,GACTF,EAAUH,EACb,GACJ,GAAC,KAIA,kBAAMT,UAAWC,EAAAA,EAAAA,IAAjB,WACI,eAAID,UAAWC,EAAAA,EAAAA,MAAf,4BACCU,IAAWF,IAAmB,SAACkB,EAAA,EAAD,IAC9BhB,IAAWF,IAAoB,yBAAMK,EAAMc,UAC3CjC,IAAU,eAAIK,UAAWC,EAAAA,EAAAA,KAAf,UAAyB,SAAC,EAAD,CAAUN,MAAOA,QAG9D,C,oBC9CD,KAAgB,KAAO,yBAAyB,IAAM,wBAAwB,MAAQ,0BAA0B,KAAO,yBAAyB,KAAO,yB","sources":["components/HomeList.jsx","pages/Home.jsx","webpack://react-homework-template/./src/css/HomeMovies.module.css?f4db"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport css from '../css/HomeMovies.module.css';\n\nconst HomeList = ({ films }) => { \n    const location = useLocation();\n   \n  return (\n        films.map(film => {\n            return <li key={film.id} className={css.item}>                \n                <Link to={`/movies/${film.id}`} state={{ from: location }} className={css.card}>\n                    <img src={`https://image.tmdb.org/t/p/w200${film['poster_path']}`} alt='poster' />\n                    <p>{film.title}</p></Link>     \n            </li>\n        })\n    );\n};\n\nHomeList.propTypes = {   \n    films: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            poster_path: PropTypes.string.isRequired,           \n       })\n    )\n}\n\nexport default HomeList;\n\n","import { useEffect, useState } from \"react\";\nimport { Loader } from \"components/Loader\";\nimport HomeList from \"components/HomeList\";\nimport css from '../css/HomeMovies.module.css';\n\nconst Status = {\n    PENDING: 'pending',\n    RESOLVED: 'resolved',\n    REJECTED: 'rejected'\n};\n\nconst Home = () => {\n\n    const [status, setStatus] = useState(null);\n    const [films, setFilms] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=7e2a233d026ec02ed6e123027bfe9410`;\n\n        setStatus(Status.PENDING);\n\n        fetch(URL).then(response => {\n            if (response.ok) {                \n             return response.json();\n            }\n            return Promise.reject(new Error('Error!'))\n         })\n         .then(({ results }) => {               \n            setFilms(results);\n            setStatus(Status.RESOLVED);             \n         })\n         .catch(error => {\n            setError(error);\n            setStatus(Status.REJECTED);\n        });   \n    },[])\n\n\n  return (\n      <main className={css.box}>\n          <h1 className={css.title}>Trending today</h1>\n          {status === Status.PENDING  && <Loader />}\n          {status === Status.REJECTED && (<div>{error.message}</div>)}          \n          {films && (<ul className={css.list}><HomeList films={films} /></ul>)}\n      </main>\n  );\n};\n\nexport default Home;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"HomeMovies_list__FPH7G\",\"box\":\"HomeMovies_box__VbjF7\",\"title\":\"HomeMovies_title__PqV8H\",\"item\":\"HomeMovies_item__5vQD2\",\"card\":\"HomeMovies_card__yTJ0l\"};"],"names":["films","location","useLocation","map","film","className","css","to","id","state","from","src","alt","title","Status","useState","status","setStatus","setFilms","error","setError","useEffect","fetch","then","response","ok","json","Promise","reject","Error","results","catch","Loader","message"],"sourceRoot":""}