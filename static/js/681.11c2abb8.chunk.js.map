{"version":3,"file":"static/js/681.11c2abb8.chunk.js","mappings":"8LAIMA,EACK,UADLA,EAEM,WAFNA,EAGM,WAkDZ,UA/CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAG,6CAAyCV,EAAzC,qDAETM,EAAUP,GAELC,GAELW,MAAMD,GAAKE,MAAK,SAAAC,GACd,OAAIA,EAASC,GACJD,EAASE,OAETC,QAAQC,OAAO,IAAIC,MAAM,UAClC,IACAN,MAAK,YAAgB,IAAdO,EAAa,EAAbA,QACNf,EAAWe,GACXb,EAAUP,EACX,IACAqB,OAAM,SAAAb,GACLC,EAASD,GACTD,EAAUP,EACX,GACF,GAAE,CAACC,KAGH,2BACGK,IAAWN,IAAoB,yBAAMQ,EAAMc,UAC3ChB,IAAWN,IAAkB,SAAC,IAAD,IAC7BI,EAAQmB,QAAU,wBAChBnB,EAAQoB,KAAI,SAAAC,GACX,OAAO,2BACL,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFGF,EAAOG,GAIxB,OAED,mDAGP,C","sources":["components/Reviews.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Loader } from \"components/Loader\";\n\nconst Status = {\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected'\n};\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  \n  const [reviews, setReviews] = useState([]); \n  const [status, setStatus] = useState(null);\n  const [error, setError] = useState(null);\n    \n  useEffect(() => {\n    const URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=7e2a233d026ec02ed6e123027bfe9410`;       \n    \n    setStatus(Status.PENDING);\n\n    if (!movieId) return;\n\n    fetch(URL).then(response => {\n      if (response.ok) {         \n        return response.json();\n      }\n        return Promise.reject(new Error('Error!'))\n     })\n     .then(({results}) => {         \n       setReviews(results);\n       setStatus(Status.RESOLVED);       \n     })\n     .catch(error => {\n       setError(error);\n       setStatus(Status.REJECTED);\n     });   \n   }, [movieId]) \n  \n  return (\n    <div>\n      {status === Status.REJECTED && (<div>{error.message}</div>)}\n      {status === Status.PENDING && <Loader />}\n      {reviews.length ? (<ul>\n        {reviews.map(review => {\n          return <li key={review.id}>\n            <b>Author: {review.author}</b>\n            <p>{review.content}</p>\n            </li>\n        })}\n       </ul>  \n      ):<p>No information found!</p>}   \n    </div>\n  );\n};\n\nexport default Reviews;"],"names":["Status","movieId","useParams","useState","reviews","setReviews","status","setStatus","error","setError","useEffect","URL","fetch","then","response","ok","json","Promise","reject","Error","results","catch","message","length","map","review","author","content","id"],"sourceRoot":""}